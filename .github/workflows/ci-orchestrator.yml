name: CI orchestrator

on:
  pull_request:
    branches:
      - main

jobs:
  # License and Markdown Check
  ci_base:
    uses: Energinet-DataHub/.github/.github/workflows/ci-base.yml@v13
    with:
      skip_license_check: true
    secrets:
      dh3serviceaccount_privatekey: ${{ secrets.dh3serviceaccount_privatekey }}

  changes:
    uses: ./.github/workflows/detect-changes.yml

  ci_docker:
    needs: changes
    uses: Energinet-DataHub/.github/.github/workflows/python-build-and-push-docker-image.yml@v13
    with:
      docker_changed: ${{ needs.changes.outputs.docker == 'true' }}
      docker_changed_in_commit: ${{ needs.changes.outputs.docker_in_commit == 'true' }}

  create_release:
    needs: changes
    if: ${{ needs.changes.outputs.telemetry == 'true' || needs.changes.outputs.spark_sql_migrations == 'true' || needs.changes.outputs.pyspark_slim == 'true'}}
    uses: ./.github/workflows/create-release-tag.yml
    secrets: inherit

  ci_pyspark_slim:
    needs: changes
    if: ${{ needs.changes.outputs.pyspark_slim == 'true' }}
    uses: ./.github/workflows/pyspark-slim-publish.yml
    secrets: inherit

  #
  # Run Python unit tests for spark sql migrations
  #
  python_ci_test_spark_sql_migrations:
    needs: [changes, ci_base, ci_docker]
    if: ${{ needs.changes.outputs.spark_sql_migrations == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/python-ci.yml@v14
    with:
      job_name: Spark sql migrations unit tests
      operating_system: dh3-ubuntu-20.04-4core
      path_static_checks: ./source/spark_sql_migrations
      # documented here https://github.com/Energinet-DataHub/opengeh-migration/tree/main/source/MigrationTools#styling-and-formatting
      ignore_errors_and_warning_flake8: E501,F401,E402,E203,W503
      tests_folder_path: ./source/spark_sql_migrations/tests
      test_report_path: ./source/spark_sql_migrations/tests
      image_tag: ${{ needs.ci_docker.outputs.image_tag }}

  #
  # Run Python unit tests for telemetry
  #
  python_ci_test_telemetry:
    needs: [changes, ci_base, ci_docker]
    if: ${{ needs.changes.outputs.telemetry == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/python-ci.yml@v14
    with:
      job_name: Telemetry unit tests
      operating_system: dh3-ubuntu-20.04-4core
      path_static_checks: ./source/telemetry/
      # documented here https://github.com/Energinet-DataHub/opengeh-migration/tree/main/source/MigrationTools#styling-and-formatting
      ignore_errors_and_warning_flake8: E501,F401,E402,E203,W503
      tests_filter_expression: telemetry_logging/
      tests_folder_path: ./source/telemetry/tests/
      test_report_path: ./source/telemetry/tests/
      image_tag: ${{ needs.ci_docker.outputs.image_tag }}

  #
  # Run Python integration tests for telemetry
  #
  python_ci_integration_test_telemetry:
    needs: [changes, ci_base, ci_docker]
    if: ${{ needs.changes.outputs.telemetry == 'true' }}
    uses: Energinet-DataHub/.github/.github/workflows/python-ci.yml@v14
    with:
      job_name: Telemetry integration tests
      operating_system: dh3-ubuntu-20.04-4core
      path_static_checks: ./source/telemetry/
      # documented here https://github.com/Energinet-DataHub/opengeh-migration/tree/main/source/MigrationTools#styling-and-formatting
      ignore_errors_and_warning_flake8: E501,F401,E402,E203,W503
      tests_filter_expression: integration_test/
      use_integrationtest_environment: true
      tests_folder_path: ./source/telemetry/tests/
      test_report_path: ./source/telemetry/tests/
      azure_keyvault_url: ${{ vars.integration_test_azure_keyvault_url }}
      image_tag: ${{ needs.ci_docker.outputs.image_tag }}

  # Branch policy status check
  allow_merge_ci_orchestrator:
    runs-on: ubuntu-latest
    needs: [ci_base, ci_docker, create_release, python_ci_test_spark_sql_migrations, python_ci_test_telemetry, python_ci_integration_test_telemetry]
    if: |
      always()
    steps:
      - name: Verify if merge is allowed
        run: |
          echo "${{ toJSON(needs) }}"
          if [[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = true ]]; then
              echo "Failed"
              exit 1
          fi

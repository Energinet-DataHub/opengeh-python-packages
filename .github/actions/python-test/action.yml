name: UV Test
description: Test a package with UV
inputs:
  name:
    description: The name of the package
    required: true
  path:
    description: The path to the package
    required: true
  tests_path:
    description: The path to the tests
    required: false
    default: tests
  azure_spn_id:
    description: The Azure SPN ID for the integration test environment
    required: false
    default: ""
  azure_tenant_id:
    description: The Azure tenant ID for the integration test environment
    required: false
    default: ""
  azure_subscription_id:
    description: The Azure subscription ID for the integration test environment
    required: false
    default: ""
  github_token:
    description: The GitHub token
    required: false
    default: ${{ github.token }}
runs:
  using: composite
  steps:
    - name: Login to access Azure resources (integration test environment)
      if: ${{ inputs.azure_spn_id != '' && inputs.azure_tenant_id != '' && inputs.azure_subscription_id != '' }}
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure_spn_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        ignore-nothing-to-cache: true
        cache-suffix: ${{ inputs.name }}
        cache-dependency-glob: |
          ${{ inputs.path }}/pyproject.toml
          ${{ inputs.path }}/uv.lock

    - name: Lint
      shell: bash
      run: uv run --directory ${{ inputs.path }} ruff check

    - name: Format
      shell: bash
      run: uv run --directory ${{ inputs.path }} ruff format --check

    - name: Test
      shell: bash
      run: uv run --directory ${{ inputs.path }} pytest ${{ inputs.tests_path }}

    - name: Coverage comment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        github-token: ${{ inputs.github_token }}
        unique-id-for-comment: ${{ inputs.name }}
        title: Coverage report for '${{ inputs.name }}'
        pytest-xml-coverage-path: ${{ inputs.path }}/coverage.xml
